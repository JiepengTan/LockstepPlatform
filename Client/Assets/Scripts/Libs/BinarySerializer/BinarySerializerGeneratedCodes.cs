//#define UN_USE_GENERATE_CODE 
//Auto Gen by code please do not modify it by hand
using System;
using System.Collections.Generic;
using UnityEngine;
namespace BinarySerializer{
#if UN_USE_GENERATE_CODE
public static partial class BinarySerializer
{
    public static void RegisterAutoGeneratedTypes(){}
}
#else
public static partial class BinarySerializer
{
    public static void RegisterAutoGeneratedTypes()
    {
        RegisterReaderWriter(ReadTestSerializeClassBaseTestInnerCls, WriteTestSerializeClassBaseTestInnerCls);
        RegisterReaderWriter(ReadTestSerializeClassBaseTestInnerCls2, WriteTestSerializeClassBaseTestInnerCls2);
        RegisterReaderWriter(ReadTestSerializeClassChild, WriteTestSerializeClassChild);
        RegisterReaderWriter(ReadTestSerializeClassChildChild, WriteTestSerializeClassChildChild);

    }
}
#endif

#if !UN_USE_GENERATE_CODE

public static partial class BinarySerializer
{
    public static TestSerializeClassChild ReadTestSerializeClassChild(byte[] fieldData, ref int cursor)
    {         
        bool isNull = ReadBoolean(fieldData, ref cursor);
        if (isNull) return null;
        var ret = new TestSerializeClassChild();
        ret.cival = ReadInt32(fieldData,ref cursor);
        ret.fval = ReadSingle(fieldData,ref cursor);
        ret.ival = ReadInt32(fieldData,ref cursor);
        ret.lvec2 = ReadLVector2(fieldData,ref cursor);
        ret.sval = ReadString(fieldData,ref cursor);
        ret.iarr = ReadArray(fieldData,ref cursor,ret.iarr);
        ret.iarr2 = ReadArray(fieldData,ref cursor,ret.iarr2);
        ret.cvecVals = ReadList(fieldData,ref cursor,ret.cvecVals);
        ret.dictVal = ReadDict(fieldData,ref cursor,ret.dictVal);
        ret.dictVal2 = ReadDict(fieldData,ref cursor,ret.dictVal2);
        ret.lstVal = ReadList(fieldData,ref cursor,ret.lstVal);
        ret.lstVal2 = ReadList(fieldData,ref cursor,ret.lstVal2);
        return ret;
    }
    public static void WriteTestSerializeClassChild(System.IO.BinaryWriter stream, TestSerializeClassChild val)
    {
        bool isNull = val == null;
        WriteBoolean(stream, isNull);
        if (isNull) return;
        WriteInt32(stream ,val.cival);
        WriteSingle(stream ,val.fval);
        WriteInt32(stream ,val.ival);
        WriteLVector2(stream ,val.lvec2);
        WriteString(stream ,val.sval);
        WriteArray(stream ,val.iarr);
        WriteArray(stream ,val.iarr2);
        WriteList(stream ,val.cvecVals);
        WriteDict(stream ,val.dictVal);
        WriteDict(stream ,val.dictVal2);
        WriteList(stream ,val.lstVal);
        WriteList(stream ,val.lstVal2);
    }
}


public static partial class BinarySerializer
{
    public static TestSerializeClassChildChild ReadTestSerializeClassChildChild(byte[] fieldData, ref int cursor)
    {         
        bool isNull = ReadBoolean(fieldData, ref cursor);
        if (isNull) return null;
        var ret = new TestSerializeClassChildChild();
        ret.ccival = ReadInt32(fieldData,ref cursor);
        ret.ccvecVals = ReadVector2(fieldData,ref cursor);
        ret.cival = ReadInt32(fieldData,ref cursor);
        ret.fval = ReadSingle(fieldData,ref cursor);
        ret.ival = ReadInt32(fieldData,ref cursor);
        ret.lvec2 = ReadLVector2(fieldData,ref cursor);
        ret.lvec3 = ReadLVector3(fieldData,ref cursor);
        ret.sval = ReadString(fieldData,ref cursor);
        ret.ccbaseVal = ReadTestSerializeClassChild(fieldData,ref cursor);
        ret.iarr = ReadArray(fieldData,ref cursor,ret.iarr);
        ret.iarr2 = ReadArray(fieldData,ref cursor,ret.iarr2);
        ret.cvecVals = ReadList(fieldData,ref cursor,ret.cvecVals);
        ret.dictVal = ReadDict(fieldData,ref cursor,ret.dictVal);
        ret.dictVal2 = ReadDict(fieldData,ref cursor,ret.dictVal2);
        ret.lstVal = ReadList(fieldData,ref cursor,ret.lstVal);
        ret.lstVal2 = ReadList(fieldData,ref cursor,ret.lstVal2);
        return ret;
    }
    public static void WriteTestSerializeClassChildChild(System.IO.BinaryWriter stream, TestSerializeClassChildChild val)
    {
        bool isNull = val == null;
        WriteBoolean(stream, isNull);
        if (isNull) return;
        WriteInt32(stream ,val.ccival);
        WriteVector2(stream ,val.ccvecVals);
        WriteInt32(stream ,val.cival);
        WriteSingle(stream ,val.fval);
        WriteInt32(stream ,val.ival);
        WriteLVector2(stream ,val.lvec2);
        WriteLVector3(stream ,val.lvec3);
        WriteString(stream ,val.sval);
        WriteTestSerializeClassChild(stream ,val.ccbaseVal);
        WriteArray(stream ,val.iarr);
        WriteArray(stream ,val.iarr2);
        WriteList(stream ,val.cvecVals);
        WriteDict(stream ,val.dictVal);
        WriteDict(stream ,val.dictVal2);
        WriteList(stream ,val.lstVal);
        WriteList(stream ,val.lstVal2);
    }
}


public static partial class BinarySerializer
{
    public static TestSerializeClassBase.TestInnerCls ReadTestSerializeClassBaseTestInnerCls(byte[] fieldData, ref int cursor)
    {         
        bool isNull = ReadBoolean(fieldData, ref cursor);
        if (isNull) return null;
        var ret = new TestSerializeClassBase.TestInnerCls();
        ret.iival = ReadInt32(fieldData,ref cursor);
        ret.isval = ReadString(fieldData,ref cursor);
        return ret;
    }
    public static void WriteTestSerializeClassBaseTestInnerCls(System.IO.BinaryWriter stream, TestSerializeClassBase.TestInnerCls val)
    {
        bool isNull = val == null;
        WriteBoolean(stream, isNull);
        if (isNull) return;
        WriteInt32(stream ,val.iival);
        WriteString(stream ,val.isval);
    }
}


public static partial class BinarySerializer
{
    public static TestSerializeClassBase.TestInnerCls2 ReadTestSerializeClassBaseTestInnerCls2(byte[] fieldData, ref int cursor)
    {         
        bool isNull = ReadBoolean(fieldData, ref cursor);
        if (isNull) return null;
        var ret = new TestSerializeClassBase.TestInnerCls2();
        ret.iival = ReadInt32(fieldData,ref cursor);
        ret.isval = ReadString(fieldData,ref cursor);
        ret.iiarr = ReadArray(fieldData,ref cursor,ret.iiarr);
        ret.idictVal = ReadDict(fieldData,ref cursor,ret.idictVal);
        ret.ilstVal = ReadList(fieldData,ref cursor,ret.ilstVal);
        return ret;
    }
    public static void WriteTestSerializeClassBaseTestInnerCls2(System.IO.BinaryWriter stream, TestSerializeClassBase.TestInnerCls2 val)
    {
        bool isNull = val == null;
        WriteBoolean(stream, isNull);
        if (isNull) return;
        WriteInt32(stream ,val.iival);
        WriteString(stream ,val.isval);
        WriteArray(stream ,val.iiarr);
        WriteDict(stream ,val.idictVal);
        WriteList(stream ,val.ilstVal);
    }
}


#endif
}
